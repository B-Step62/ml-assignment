---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -o k8s/deployment.yaml
    kompose.version: 1.28.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: app
  name: app
spec:
  ports:
    - name: "9527"
      port: 9527
      targetPort: 9527
  selector:
    io.kompose.service: app
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -o k8s/deployment.yaml
    kompose.version: 1.28.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: rabbitmq
  name: rabbitmq
spec:
  ports:
    - name: "5672"
      port: 5672
      targetPort: 5672
    - name: "15672"
      port: 15672
      targetPort: 15672
  selector:
    io.kompose.service: rabbitmq
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -o k8s/deployment.yaml
    kompose.version: 1.28.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: redis
  name: redis
spec:
  ports:
    - name: "6379"
      port: 6379
      targetPort: 6379
  selector:
    io.kompose.service: redis
status:
  loadBalancer: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -o k8s/deployment.yaml
    kompose.version: 1.28.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: app
  name: app
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: app
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -o k8s/deployment.yaml
        kompose.version: 1.28.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.network/ml-assignment-default: "true"
        io.kompose.service: app
    spec:
      containers:
        - args:
            - uvicorn
            - main:app
            - --host
            - 0.0.0.0
            - --port
            - "9527"
            - --reload
          env:
            - name: RABBITMQ_HOST
              valueFrom:
                configMapKeyRef:
                  key: RABBITMQ_HOST
                  name: env
            - name: RABBITMQ_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: RABBITMQ_PASSWORD
                  name: env
            - name: RABBITMQ_PORT
              valueFrom:
                configMapKeyRef:
                  key: RABBITMQ_PORT
                  name: env
            - name: RABBITMQ_USER
              valueFrom:
                configMapKeyRef:
                  key: RABBITMQ_USER
                  name: env
            - name: REDIS_DB
              valueFrom:
                configMapKeyRef:
                  key: REDIS_DB
                  name: env
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  key: REDIS_HOST
                  name: env
            - name: REDIS_PORT
              valueFrom:
                configMapKeyRef:
                  key: REDIS_PORT
                  name: env
          image: app
          name: app
          ports:
            - containerPort: 9527
          resources: {}
          volumeMounts:
            - mountPath: /app
              name: app-claim0
      restartPolicy: Always
      volumes:
        - name: app-claim0
          persistentVolumeClaim:
            claimName: app-claim0
status: {}

---
apiVersion: v1
data:
  RABBITMQ_HOST: rabbitmq
  RABBITMQ_PASSWORD: test
  RABBITMQ_PORT: "5672"
  RABBITMQ_USER: test
  REDIS_DB: "0"
  REDIS_HOST: redis
  REDIS_PORT: "6379"
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: app-env
  name: env

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: app-claim0
  name: app-claim0
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  creationTimestamp: null
  name: ml-assignment-default
spec:
  ingress:
    - from:
        - podSelector:
            matchLabels:
              io.kompose.network/ml-assignment-default: "true"
  podSelector:
    matchLabels:
      io.kompose.network/ml-assignment-default: "true"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -o k8s/deployment.yaml
    kompose.version: 1.28.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: rabbitmq
  name: rabbitmq
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: rabbitmq
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -o k8s/deployment.yaml
        kompose.version: 1.28.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.network/ml-assignment-default: "true"
        io.kompose.service: rabbitmq
    spec:
      containers:
        - env:
            - name: RABBITMQ_DEFAULT_PASS
              value: test
            - name: RABBITMQ_DEFAULT_USER
              value: test
          image: rabbitmq:3-management
          name: rabbitmq
          ports:
            - containerPort: 5672
            - containerPort: 15672
          resources: {}
      restartPolicy: Always
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -o k8s/deployment.yaml
    kompose.version: 1.28.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: redis
  name: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: redis
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -o k8s/deployment.yaml
        kompose.version: 1.28.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.network/ml-assignment-default: "true"
        io.kompose.service: redis
    spec:
      containers:
        - image: redis:alpine
          name: redis
          ports:
            - containerPort: 6379
          resources: {}
      restartPolicy: Always
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -o k8s/deployment.yaml
    kompose.version: 1.28.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: worker
  name: worker
spec:
  replicas: 3
  selector:
    matchLabels:
      io.kompose.service: worker
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -o k8s/deployment.yaml
        kompose.version: 1.28.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.network/ml-assignment-default: "true"
        io.kompose.service: worker
    spec:
      containers:
        - args:
            - python
            - main.py
          env:
            - name: RABBITMQ_HOST
              valueFrom:
                configMapKeyRef:
                  key: RABBITMQ_HOST
                  name: env
            - name: RABBITMQ_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: RABBITMQ_PASSWORD
                  name: env
            - name: RABBITMQ_PORT
              valueFrom:
                configMapKeyRef:
                  key: RABBITMQ_PORT
                  name: env
            - name: RABBITMQ_USER
              valueFrom:
                configMapKeyRef:
                  key: RABBITMQ_USER
                  name: env
            - name: REDIS_DB
              valueFrom:
                configMapKeyRef:
                  key: REDIS_DB
                  name: env
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  key: REDIS_HOST
                  name: env
            - name: REDIS_PORT
              valueFrom:
                configMapKeyRef:
                  key: REDIS_PORT
                  name: env
          image: worker
          name: worker
          resources: {}
          volumeMounts:
            - mountPath: /worker
              name: worker-claim0
            - mountPath: /root/.cache/huggingface/transformers
              name: hf-cache
      restartPolicy: Always
      volumes:
        - name: worker-claim0
          persistentVolumeClaim:
            claimName: worker-claim0
        - name: hf-cache
          persistentVolumeClaim:
            claimName: hf-cache
status: {}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: worker-claim0
  name: worker-claim0
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: hf-cache
  name: hf-cache
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}

